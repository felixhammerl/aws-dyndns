#!/bin/bash
set -u

function usage() {
	cat >&2 << EOF
Usage  : $0 DNS_FQDN DNS_TTL AWS_ZONE_ID 
Example: $0 test.example.com 5 Z148QEXAMPLE8V
EOF
	exit 1
}

function validate_ip() {
	tmp_output=$(ip route get $1)
	tmp_code=$?
	[ "$tmp_code" = "0" ]
}

[ "$#" -eq 3 ] || usage

DNS_FQDN="$1"; shift
DNS_TTL="$1"; shift
AWS_ZONE_ID="$1"; shift

OLD_IP="$(dig hostname AAAA +short '$DNS_FQDN' | sed 's/.*/\L&/')"
NEW_IP="$(curl -sS --max-time 5 https://api6.ipify.org | sed 's/.*/\L&/')"

if ! validate_ip "$NEW_IP" ; then
	echo "Invalid NEW_IP: $NEW_IP"
	exit 1
fi

if [ "$OLD_IP" == "$NEW_IP" ]; then
	echo "No IP change detected: $OLD_IP"
	exit 0
fi

read -r -d '' JSON_CMD << EOF
{
	"Comment": "DynDNS update",
	"Changes": [
		{
			"Action": "UPSERT",
			"ResourceRecordSet": {
				"Name": "$DNS_FQDN.",
				"Type": "AAAA",
				"TTL": $DNS_TTL,
				"ResourceRecords": [
					{
						"Value": "$NEW_IP"
					}
				]
			}
		}
	]
}
EOF

echo "Updating IP to: $NEW_IP ($DNS_FQDN); OLD=$OLD_IP"

aws route53 change-resource-record-sets --hosted-zone-id "$AWS_ZONE_ID" --change-batch "$JSON_CMD"

echo "Done. Request sent to update IP to: $NEW_IP ($DNS_FQDN)"
